<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome to my blogs! :tada: on HoHai&#39;s GitBlogs</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Welcome to my blogs! :tada: on HoHai&#39;s GitBlogs</description>
    <generator>Hugo 0.125.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Seperate a job into multiple async jobs</title>
      <link>http://localhost:1313/posts/seperate-job-into-multiple-async-subjob/</link>
      <pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/seperate-job-into-multiple-async-subjob/</guid>
      <description>Seperate a job into multiple async jobs #Sometime when I make a rquest to get info from an API which do some specified task per request. Then job will take longtime to run if I have muliple requests.&#xA;for (let i = 0; i &amp;lt; count; i++) { const responsePerRequest = request(&amp;#34;Some data of i&amp;#34;, i); } Total time = Total(responsePerRequest) Because of each request i is independence, then I can split these request into a jobs then call async Make a job executes a list of request #async function childJob(subSetOfRequests) { // We can do sequencely subset of requests by synchoronous // For example in the case we make request to API using `axios` then we can do by for (let i = 0; i &amp;lt; subSetOfRequests.</description>
    </item>
    <item>
      <title>Traveller Tree</title>
      <link>http://localhost:1313/posts/traveller-tree/</link>
      <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/traveller-tree/</guid>
      <description>traveller-tree #This lib provide 2 features:&#xA;Get schema of json object Flat json object into array of elements. Install #npm install traveller-tree Get schema of json object #travelSchema({ A: { B: &amp;#34;A String&amp;#34;, C: 123, D: { D1: &amp;#34;D1 String&amp;#34;, D2: &amp;#34;D2 String&amp;#34;, }, E: [ { E1: &amp;#34;E1 in element 1&amp;#34;, }, { E1: &amp;#34;E1 in element 2&amp;#34;, }, ], }, }) ) Flat nested json to array of flat objects # Option 1: Using travelData MovePath should be at the deepest depth we want to get.</description>
    </item>
    <item>
      <title>Build Objects</title>
      <link>http://localhost:1313/posts/03-build-objects/</link>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/03-build-objects/</guid>
      <description>new in function call # graph&#xD;A[&#34;var john = new Person()&#34;]&#xD;B[&#34;{} - 0x001 in memory&#34;]&#xD;C[&#34;function Person()&#xA;(without returned value)&#xA;FUNCTION CONSTRUCTOR&#34;]&#xD;D[&#34;function Person()&#xA;(with returned value)&#34;]&#xD;E[&#34;var john (refer to returned value)&#34;]&#xD;A--new--&gt;B&#xD;B--incase OK, function without return value&#xA;change pointer this = {} --&gt;C&#xD;C--update {}-0x001 and assign to variable --&gt;A&#xD;B--incase NOK, function with return value&#xA;change pointer this = {} --&gt; D&#xD;D--&gt;E&#xD;style C fill:#4287f5&#xD;function Person(firstName, lastName) { this.</description>
    </item>
    <item>
      <title>Execution context in Javascript</title>
      <link>http://localhost:1313/posts/00-execution-context/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/00-execution-context/</guid>
      <description>Setup # Chrome https://brackets.io/ or VS Code (With Live Server Extenstion) BIG WORDS ALERT # Systax Parser Lexical Environment Execution Context Global Environment and Global Object # When code is run in Javascript, it run inside Execution Context (Global) Execution Context create 2 things: Global Object: in browers is window (different than nodeJS). If we have a seperate tab that would be a seperat3e global object (each tab is hold a Execution Context) this Global mean: Not inside a Function Creation and Execution Phase (by Javascript Engine) # Phase 1: Creation 3 things and setup memory space (at creation time)</description>
    </item>
    <item>
      <title>Objects and Functions</title>
      <link>http://localhost:1313/posts/01-objects-functions/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/01-objects-functions/</guid>
      <description>Objects # How objects are live in memory: They are siting in memory and keep the reference to others (keep in memory also) graph LR&#xD;A[&#34;Object 0x001&#34;] --&gt; B[&#34;Primitive &#39;Property&#39;&#xA;0x002&#34;]&#xD;A --&gt; C[&#34;Object Property = collection of name/value pairs&#xA;0x003&#34;]&#xD;A --&gt; D[&#34;function = method&#xA;0x004&#34;]&#xD;Namespace: # Keep variables and functions with name seperate Javascript doesn&amp;rsquo;t have namespaces var greet = &amp;#34;Hello !&amp;#34;; var greet = &amp;#34;HOLLA !&amp;#34;; console.</description>
    </item>
    <item>
      <title>Prototype Inheritance</title>
      <link>http://localhost:1313/posts/02-oop-prototype-inheritance/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/02-oop-prototype-inheritance/</guid>
      <description>Classical Inheritance vs Prototype Inheritance # Classical Inheritance: like C#, Java&amp;hellip; Prototypal Inheritance: Javascript Prototype # Prototype chain: the links that Javascript can search from current object to __proto__ parent object (and so on) graph&#xD;A[&#34;Obj&#34;]&#xD;B[&#34;prop-1&#34;]&#xD;C[&#34;__proto__&#34;]&#xD;D[&#34;prop-2&#34;]&#xD;E[&#34;__proto__&#34;]&#xD;F[&#34;prop-3&#34;]&#xD;G[&#34;Obj2&#34;]&#xD;H[&#34;...&#34;]&#xD;A--&gt;B&#xD;A--&gt;C&#xD;C--&gt;D&#xD;C--&gt;E&#xD;E--&gt;F&#xD;G--share same object (memory)--&gt;C&#xD;E--&gt;H&#xD;Everthing is an Object (or a primitive) # graph&#xD;D[&#34;Object&#34;]&#xD;E[&#34;function&#34;]&#xD;F[&#34;Array&#34;]&#xD;A[&#34;__proto__: Object-builtin&#xA;{toString: f,..}&#34;]&#xD;B[&#34;__proto__: Funcion-builtin</description>
    </item>
    <item>
      <title>Advanced Javascript Techniques</title>
      <link>http://localhost:1313/posts/js-advanced-technique/</link>
      <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/js-advanced-technique/</guid>
      <description>Advanced Javascript Techniques #Refer: https://tecadmin.net/advanced-javascript-techniques/&#xA;Closure # The function can remember variables environment (persistent state) // Closures function counter() { let count = 0; // persistent state return function () { return ++count; }; } const c = counter(); console.log(c()); // 1 console.log(c()); // 2 console.log(c()); // 3 Currying # A function can be transformed into series functions function add(a, b) { return a + b; } function curryAdd(a) { return function (b) { return add(a, b); }; } const add5 = curryAdd(5); console.</description>
    </item>
    <item>
      <title>React useContext</title>
      <link>http://localhost:1313/posts/react-usecontext/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/react-usecontext/</guid>
      <description>Use context #Basic usage # Provider: We can export the context object for other module can reuse&#xA;const JiraActionContext = createContext(); export default function JiraTrackingByDate() { return; &amp;lt;JiraActionContext.Provider value={onJiraCellChange} {...} &amp;gt;&amp;lt;/JiraActionContext.Provider&amp;gt;; } Consumer:&#xA;We can import the context object then can use&#xA;import { JiraActionContext } from &amp;#34;./JiraTrackingByDate&amp;#34;; function JiraEditableTextField({ jiraRow, jiraField, jiraDate, children }) { const onJiraCellChange = useContext(JiraActionContext); Advanced usage #We will implement Provider function at a children.</description>
    </item>
    <item>
      <title>Advance Javascript (Part 3)</title>
      <link>http://localhost:1313/posts/advance-js-3/</link>
      <pubDate>Thu, 21 Dec 2023 07:07:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/advance-js-3/</guid>
      <description>Contructors with Prototypes # class was introducted in ES2015 class Car { constructor(model, year) { this.model = model; this.year = year; } // Should be move to Car.prototype object then all of Car instances will // be refer to same this function object // toString() { // console.log(`${this.model} has ${this.year}`); // } } // All of Car instances wil be refer to same this function object Car.prototype.toString = function () { console.</description>
    </item>
    <item>
      <title>Advance Javascript (Part 2)</title>
      <link>http://localhost:1313/posts/advance-js-2/</link>
      <pubDate>Fri, 15 Dec 2023 07:07:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/advance-js-2/</guid>
      <description>Higher Functions, Callbacks # Higher function are functions that operate on other functions (by taking them as arguments or returning them)&#xA;this refer to global object&#xA;var fullName = function () { setTimeout(function () { // `this` will refer to global object console.log(this.firstName + &amp;#34; &amp;#34; + this.lastName); }, 1000); }; fullName.call({ firstName: &amp;#34;Ho&amp;#34;, lastName: &amp;#34;Hai&amp;#34;, }); // undefined undefined Can fix by hacking Option 1: store this object in higher function var fullName = function () { let that = this; setTimeout(function () { // `this` will refer to global object console.</description>
    </item>
    <item>
      <title>Advance Javascript (Part 1)</title>
      <link>http://localhost:1313/posts/advance-js-1/</link>
      <pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/advance-js-1/</guid>
      <description>Advance JS: #Primitive Datatype # Strings, Numbers, Booleans, undefined, null, Symbols There are object wrappers wrapping these types, then we can access the methods of these objects. Objects # Everything (except primitive types) are object Object: a collection of values Functions are objects. The different things are the internal properties such as [[Code]], [[Call]] Functions are objects # Function Declaration // Function Declaration function functionName() { // Code block to execute } Function Expression // Function Expression let x = function functionName(val) { // Code block to execute console.</description>
    </item>
    <item>
      <title>Builder Module</title>
      <link>http://localhost:1313/posts/builder-modules/</link>
      <pubDate>Mon, 11 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/builder-modules/</guid>
      <description>Builder module # Extract properties of object to reuse these properties const { toString } = Object.prototype; const { getPrototypeOf } = Object; const { isArray } = Array; Abstraction # Each significant of functionality should be implement in just one place </description>
    </item>
    <item>
      <title>Builder Objects</title>
      <link>http://localhost:1313/posts/builder-objects/</link>
      <pubDate>Sat, 09 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/builder-objects/</guid>
      <description>Object Builder #How we define object and attribute correctly&#xA;Think like objects # It&amp;rsquo;s easy if we abstract everything is object (both of Javascript/Python&amp;hellip;). Because it&amp;rsquo;s modeling the problem and due to escapsulation we can ignore the detail implementation if need.&#xA;In Javascript functions is function, but we can think they should be objects also.&#xA;function = callable object&#xA;function = protoptype (aka class) to init object&#xA;function has a prototype object</description>
    </item>
    <item>
      <title>Builder Functions</title>
      <link>http://localhost:1313/posts/builder-functions/</link>
      <pubDate>Fri, 08 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/builder-functions/</guid>
      <description>Function builders # A function can contain a nested function. The nested function can access from parent&amp;rsquo;s variable scope A function can receive a parameterized function A function can be composed from other functions Nested function #// _inner function is nested in highOrderFunc function highOrderFunc(type) { function _inner(thing) { // Thing parameter will be visiable at calling time, not definition time return thing + type; } return _inner; // Return the function object, NOT calling function _innner() } // Same result, but using arrow style const highOrderArrowFunc = (type) =&amp;gt; (thing) =&amp;gt; thing + type; console.</description>
    </item>
    <item>
      <title>Chakra UI Notes</title>
      <link>http://localhost:1313/posts/chakra-notes/</link>
      <pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/chakra-notes/</guid>
      <description>Chakra Notes #Grid # templateColumns: divide into columns, using repeat(6, 1fr) mean that seperate 6 columns colSpan: range from 1..max-number-column &amp;lt;Grid templateColumns=&amp;#34;repeat(6, 1fr)&amp;#34; bg=&amp;#34;gray.100&amp;#34;&amp;gt; &amp;lt;GridItem as=&amp;#34;aside&amp;#34; colSpan={{ base: 6, lg: 2, xl: 1 }} bg=&amp;#34;brand.500&amp;#34; minHeight={{ lg: &amp;#34;100vh&amp;#34; }} p={{ base: &amp;#34;20px&amp;#34;, lg: &amp;#34;30px&amp;#34; }} &amp;gt; &amp;lt;Slidebar /&amp;gt; &amp;lt;/GridItem&amp;gt; &amp;lt;GridItem as=&amp;#34;main&amp;#34; colSpan={{ base: 6, lg: 2, xl: 5 }} p=&amp;#34;30px&amp;#34;&amp;gt; &amp;lt;Navbar /&amp;gt; &amp;lt;Outlet /&amp;gt; &amp;lt;/GridItem&amp;gt; &amp;lt;/Grid&amp;gt; Table #import { TableContainer, Table, Thead, Tbody, Tfoot, Tr, Th, Td, } from &amp;#34;@chakra-ui/react&amp;#34;; function JiraListControl({ onTagChange, onTagDelete }) { const data = useContext(DataTagContext); return ( &amp;lt;TableContainer&amp;gt; &amp;lt;Table variant=&amp;#34;simple&amp;#34;&amp;gt; &amp;lt;Thead&amp;gt; &amp;lt;Tr&amp;gt; &amp;lt;Th w=&amp;#34;25%&amp;#34;&amp;gt;Tag name&amp;lt;/Th&amp;gt; &amp;lt;Th w=&amp;#34;60%&amp;#34;&amp;gt;Jira Query&amp;lt;/Th&amp;gt; &amp;lt;Th&amp;gt;Jira Count&amp;lt;/Th&amp;gt; &amp;lt;Th&amp;gt;Edit Control&amp;lt;/Th&amp;gt; &amp;lt;/Tr&amp;gt; &amp;lt;/Thead&amp;gt; &amp;lt;Tbody&amp;gt; {data.</description>
    </item>
    <item>
      <title>React Custom Hooks</title>
      <link>http://localhost:1313/posts/react-custom-hook/</link>
      <pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/react-custom-hook/</guid>
      <description>React Custom Hook #Follow the link: https://blog.logrocket.com/developing-responsive-layouts-with-react-hooks/&#xA;Create the new custom hook to: Any event resize change will trigger rendering new components ( or ) The logic: resize event &amp;raquo; setWind (thanks to useEffect hook and event listener) &amp;raquo; width changed &amp;raquo; re-evaluate width &amp;lt; breakpoint &amp;raquo; new component render const useViewport = () =&amp;gt; { // Declare a new state variable with the &amp;#34;useState&amp;#34; Hook const [width, setWidth] = React.</description>
    </item>
    <item>
      <title>This keyword in Javascript</title>
      <link>http://localhost:1313/posts/this-object/</link>
      <pubDate>Wed, 06 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/this-object/</guid>
      <description>This keyword in Javascript #this alone # Refer to global object. In node.js this will be undefined. In browser will return the window object. But for using &amp;ldquo;use strict&amp;rdquo;, this will be return undefined console.log(this); const x = this; this in function # Without new calling function &amp;raquo; refer to global object With new calling function &amp;raquo; refer to new instance object function thisInFunc() { console.log(this); } thisInFunc(); // Undefine in node.</description>
    </item>
    <item>
      <title>Asynchoronous Javascript</title>
      <link>http://localhost:1313/posts/asynchronouns-js/</link>
      <pubDate>Tue, 05 Dec 2023 07:07:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/asynchronouns-js/</guid>
      <description>Asynchoronous Javascript #Follow the link:&#xA;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Introducing Callback hell # How to notify the caller when the nest function is complete &amp;raquo; We use a callback function. But in the case if we compose the sequenced steps (one by one), then we got deeply nested doOperation() &amp;raquo; this is Callback hell function doStep1(init, callback) { const result = init + 1; callback(result); } function doStep2(init, callback) { const result = init + 2; callback(result); } function doStep3(init, callback) { const result = init + 3; callback(result); } function doOperation() { doStep1(0, (result1) =&amp;gt; { doStep2(result1, (result2) =&amp;gt; { doStep3(result2, (result3) =&amp;gt; { console.</description>
    </item>
    <item>
      <title>React Components Composition</title>
      <link>http://localhost:1313/posts/react-components-composition/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/react-components-composition/</guid>
      <description>React Components Composition #Refer to link: https://www.developerway.com/posts/components-composition-how-to-get-it-righ&#xA;Simple components # Accept props Have some states const Button = ({ title, onClick }) =&amp;gt; ( &amp;lt;button onClick={onClick}&amp;gt;{title}&amp;lt;/button&amp;gt; ); Composition components # Can compose new component from other components const Navigation = () =&amp;gt; { return ( &amp;lt;&amp;gt; // Rendering out Button component in Navigation component. Composition! &amp;lt;Button title=&amp;#34;Create&amp;#34; onClick={onClickHandler} /&amp;gt; ... // some other navigation code &amp;lt;/&amp;gt; ); }; Container components # Allow passing specical prop children // the code is exactly the same!</description>
    </item>
    <item>
      <title>React Re-Render</title>
      <link>http://localhost:1313/posts/react-rerender/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/react-rerender/</guid>
      <description>React Re-render #There are 2 common cases that we want to re-render&#xA;Top Bottom Bottom up Top Bottom # The common cases: data from current to child Triggers: Any change in current states (in setXXX method) Any change in props function ParentComponent() { return ( &amp;lt;div&amp;gt; &amp;lt;ChildComponent /&amp;gt; &amp;lt;/div&amp;gt; ); } function Component() { { /*Internal state */ } const [myState, setMyState] = useState(0); return ( &amp;lt;div&amp;gt; &amp;lt;p&amp;gt;{&amp;#34;Number: &amp;#34; + myState.</description>
    </item>
    <item>
      <title>Object Prototypes</title>
      <link>http://localhost:1313/posts/object-prototypes/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/object-prototypes/</guid>
      <description>Object Prototypes #Refer to:&#xA;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes Prototypes # Prototype is object, to reuse the feature/function. Every object have a prototype (similar to a layer that build up to object). May be we can think like the base image in docker Prototype chain: myObject.__proto__ &amp;gt;&amp;gt; myObject.__proto__.__proto__ (refer a prototype of prototype of my object)...&amp;gt;&amp;gt; until null myObject.__proto__ === Object.getPrototypeOf(myObject) To access a prototype object we can use one of ways myObject.__proto__; Object.getPrototypeOf(myObject); myObject.</description>
    </item>
    <item>
      <title>Deploy and run on Google Cloud</title>
      <link>http://localhost:1313/posts/run-deploy-cloud-frontend/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/run-deploy-cloud-frontend/</guid>
      <description>Deploy and run on Google Cloud #https://cloud.google.com/run/docs/internet-proxy-nginx-sidecargcloud components update&#xA;https://github.com/GoogleCloudPlatform/cloud-run-samples/blob/02a123881ba33801ec6609c4f81f163a14ee2636/multi-container/hello-nginx-sample/README.md&#xA;Add/Change nginx.conf: server { # Listen at port 8080 listen 8080; # Server at localhost server_name _; # Enables gzip compression to make our app faster gzip on; location / { # Passes initial requests to port 8080 to `hello` container at port 8888 # proxy_pass http://127.0.0.1:8888; # Passes initial requests to port 8080 to `hello` container at port 80 proxy_pass http://127.</description>
    </item>
    <item>
      <title>Deploy and run on Google Cloud</title>
      <link>http://localhost:1313/posts/run-deploy-cloud/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/run-deploy-cloud/</guid>
      <description>Deploy and run on Google Cloud #https://cloud.google.com/run/docs/internet-proxy-nginx-sidecargcloud components update&#xA;https://github.com/GoogleCloudPlatform/cloud-run-samples/blob/02a123881ba33801ec6609c4f81f163a14ee2636/multi-container/hello-nginx-sample/README.md&#xA;Add/Change nginx.conf: server { # Listen at port 8080 listen 8080; # Server at localhost server_name _; # Enables gzip compression to make our app faster gzip on; location / { # Passes initial requests to port 8080 to `hello` container at port 8888 # proxy_pass http://127.0.0.1:8888; # Passes initial requests to port 8080 to `hello` container at port 80 proxy_pass http://127.</description>
    </item>
    <item>
      <title>Run GCloud Docker</title>
      <link>http://localhost:1313/posts/run-gcloud-docker/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/run-gcloud-docker/</guid>
      <description>Run on Local/Docker service (Google Cloud) #Follow by the link:&#xA;https://cloud.google.com/artifact-registry/docs/docker/store-docker-container-images#gcloud https://cloud.google.com/run/docs/deploying#yaml Create/Register Artifact Registry in GCloud: # Option 1: By Google Console: https://console.cloud.google.com/artifacts?referrer=search&amp;project=hohai-sample-cloud-run&#xA;Option 2: by Google CLI&#xA;# List repositores in GCloud gcloud artifacts repositories list # Create by script: gcloud artifacts repositories create &amp;lt;REPO-NAME&amp;gt; --repository-format=docker --location=&amp;lt;LOCATION&amp;gt; --description=&amp;#34;DESCRIPTION&amp;#34; # Example gcloud artifacts repositories create translation-backend --repository-format=docker --location=asia-east1 --description=&amp;#34;DESCRIPTION&amp;#34; Config Authentication in Docker # Purpose: allow Google Cloud CLI to authenticate Artifact Registry gcloud auth configure-docker &amp;lt;REGION&amp;gt;-docker.</description>
    </item>
    <item>
      <title>Run Local Docker for Frontend</title>
      <link>http://localhost:1313/posts/run-local-docker-frontend/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/run-local-docker-frontend/</guid>
      <description>Run in Local/Docker #We can run directly from source or build the docker image&#xA;Run from source # Run by npm run&#xA;npm run dev The above command will lookup scripts section&#xA;&amp;#34;scripts&amp;#34;: { &amp;#34;dev&amp;#34;: &amp;#34;vite&amp;#34;, &amp;#34;dev-host&amp;#34;: &amp;#34;vite --host&amp;#34;, &amp;#34;build&amp;#34;: &amp;#34;vite build&amp;#34;, &amp;#34;lint&amp;#34;: &amp;#34;eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0&amp;#34;, &amp;#34;preview&amp;#34;: &amp;#34;vite preview&amp;#34;, &amp;#34;docker-dev-up&amp;#34;: &amp;#34;docker-compose -f docker-compose.dev.yml up&amp;#34;, &amp;#34;docker-dev-down&amp;#34;: &amp;#34;docker-compose -f docker-compose.dev.yml down&amp;#34; } In the case we want to specify exposed port:</description>
    </item>
    <item>
      <title>Run on Local/Docker service (Flask)</title>
      <link>http://localhost:1313/posts/run-local-docker/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/run-local-docker/</guid>
      <description>Run on Local/Docker service (Flask) #There are 2 options to run at local:&#xA;Deploy/Run directly from host machine: I use this option for debug/development Deploy/Run on docker: I will build docker image from base image and source code. Run on local: # We can run by: python -m flask run Or by run directly app.py python app.py Build Docker image # Create Dockerfile&#xA;FROM python:3.10.13-alpine3.17 WORKDIR /translation-backend COPY requirements.txt requirements.txt RUN pip3 install -r requirements.</description>
    </item>
    <item>
      <title>Server handle exception and result</title>
      <link>http://localhost:1313/posts/server-handle-exception-result/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/server-handle-exception-result/</guid>
      <description>Server handle exception and result #One problem when we process requests from client is:&#xA;What is format of result of response What is exception policy should be handle. For example, if client sent the bad request (bad query) then what is message response that server need to notify to client ? For above reasons, I will introdure 2 modules: - _input_boundary.py: the module will handle in request and wrap response to flask.</description>
    </item>
    <item>
      <title>VS Code setup for React project</title>
      <link>http://localhost:1313/posts/setup-vscode-react/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/setup-vscode-react/</guid>
      <description>VS Code setup for React project #We can install some extensions&#xA;Browse Lite: https://github.com/antfu/vscode-browse-lite&#xA;Then open command Cmd + Shift + P &amp;raquo; Browse Run Open&amp;hellip;.&#xA;ES7 + React/Redux/React-Native snippets rfc type &amp;raquo; create react component</description>
    </item>
    <item>
      <title>Clean Code (Part 2)</title>
      <link>http://localhost:1313/posts/clean-code-2/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/clean-code-2/</guid>
      <description>Comments # Don’t comment bad code—rewrite it.&#xA;// Check to see if the employee is eligible for full benefits if ((employee.flags &amp;amp; HOURLY_FLAG) &amp;amp;&amp;amp; (employee.age &amp;gt; 65)) or&#xA;if (employee.isEligibleForFullBenefits()) Classes #public class Sql { public Sql(String table, Column[] columns) public String create() public String insert(Object[] fields) public String selectAll() public String findByKey(String keyColumn, String keyValue) public String select(Column column, String pattern) public String select(Criteria criteria) public String preparedInsert() private String columnList(Column[] columns) private String valuesList(Object[] fields, final Column[] columns) private String selectWithCriteria(String criteria) private String placeholderList(Column[] columns) } Reason to change - Sql will change when adding new type.</description>
    </item>
    <item>
      <title>Setup Javascript</title>
      <link>http://localhost:1313/posts/setup-js/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/setup-js/</guid>
      <description>Debug #If you have error such as Error [ERR_MODULE_NOT_FOUND]: Cannot find module () https://stackoverflow.com/questions/65384754/error-err-module-not-found-cannot-find-module) then you can check the import in javascript&#xA;// Should include .js as fullname of module import { SnapshotData, TagQueryShapshotMerger } from &amp;#34;./RemoteData.js&amp;#34;; </description>
    </item>
    <item>
      <title>TypeScript Setup</title>
      <link>http://localhost:1313/posts/ts-setup/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/ts-setup/</guid>
      <description>Typescript setup # Install node.js Install typescript package using npm npm install typescript Run on node the first ts # Write a file name example.ts with extenstion .ts type WithName = { name: string; }; function printName(arg: WithName) { console.log(arg.name); } printName({ name: &amp;#34;HoHai&amp;#34;, }); Compile ts &amp;raquo; js tsc example.ts Run the compiled js file node first.js Run on browser # Create new html file, for example index.html&#xA;In VS Code type !</description>
    </item>
    <item>
      <title>Clean Code (Part 1)</title>
      <link>http://localhost:1313/posts/clean-code-1/</link>
      <pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/clean-code-1/</guid>
      <description>Function # Cannot understand in 3 mins public static String testableHtml( PageData pageData, boolean includeSuiteSetup ) throws Exception { WikiPage wikiPage = pageData.getWikiPage(); StringBuffer buffer = new StringBuffer(); if (pageData.hasAttribute(&amp;#34;Test&amp;#34;)) { if (includeSuiteSetup) { WikiPage suiteSetup = PageCrawlerImpl.getInheritedPage( SuiteResponder.SUITE_SETUP_NAME, wikiPage ); if (suiteSetup != null) { WikiPagePath pagePath = suiteSetup.getPageCrawler().getFullPath(suiteSetup); String pagePathName = PathParser.render(pagePath); buffer.append(&amp;#34;!include -setup .&amp;#34;) .append(pagePathName) .append(&amp;#34;\n&amp;#34;); } } WikiPage setup = PageCrawlerImpl.getInheritedPage(&amp;#34;SetUp&amp;#34;, wikiPage); if (setup != null) { WikiPagePath setupPath = wikiPage.</description>
    </item>
    <item>
      <title>Create Python project</title>
      <link>http://localhost:1313/posts/create-python-project/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/create-python-project/</guid>
      <description>Create Python project # For PyCharm then you can ignore this step For Visual Studio Code: Create new folder with project-name Create virtual environment to isolate installed packages + python: Go to project name then run the command # Create virtual environment python -m venv .venv # Activate (Windows) .\.venv\Scripts\activate # Activate (Mac) source ./.venv/Scripts/activate Install required package # After activating virtual environment, then we can install required packages by the command pip install &amp;lt;PACKAGE-NAME&amp;gt; If we define the required package in the requirements.</description>
    </item>
    <item>
      <title>Create React project</title>
      <link>http://localhost:1313/posts/create-react-project/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/create-react-project/</guid>
      <description>Create React project # Create React + Vite project by the following command npm create vite@latest Then follw the prompts. Refer to: https://vitejs.dev/guide/&#xA;Create React only: npx create-react-app &amp;lt;APP-NAME&amp;gt; Refer to: https://create-react-app.dev/&#xA;Install required packages #We can install required packages by using npm&#xA;npm install &amp;lt;PACKAGE-NAME&amp;gt; Install Chakra UI packages: https://chakra-ui.com/getting-started&#xA;npm i @chakra-ui/react @emotion/react @emotion/styled framer-motion # For use Chakra UI icon npm i @chakra-ui/icons The information of installed packages will be keep in package.</description>
    </item>
    <item>
      <title>SOLID Principles</title>
      <link>http://localhost:1313/posts/solid-1/</link>
      <pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/solid-1/</guid>
      <description>Single Responsibility # The class only have one reason to change class Payroll { payFor(employee: Employee) {} } class Employee { CalcPay() {} ReportHours() {} WriteEmploye() {} } How many reason does this class have to change ? How many sources of change ? Then the Employee class should have 3 different responsibilities. 3 methods should be long 3 classes class Payroll { payFor(employee: Employee) {} } class Employee { CalcPay() {} } class ReportWrite { writeReport(employee: Employee) {} } class EmployeeRepository { save(employee: Employee) {} } </description>
    </item>
    <item>
      <title>Boston Data Analysis</title>
      <link>http://localhost:1313/posts/2022-05-24-boston-data-analysis/</link>
      <pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-05-24-boston-data-analysis/</guid>
      <description>Business Understanding #I love to travel and usually when I have time and money, I pack my bags and hit the road. One of the issues affecting my travel budget is the cost of accommodation (hotel&amp;hellip;). Recently, when I joined the program on Udacity, I got data about housing prices in Boston. Let&amp;rsquo;s study housing prices in Boston with me. There are 3 questions that I am interested in when looking at this data:</description>
    </item>
  </channel>
</rss>
